
name: Build and Push
on:
  workflow_call:
    outputs:
      image:
        value: ${{ jobs.Build_Push.outputs.image }}
      short-image:
        value: ${{ jobs.Build_Push.outputs.short-image }}
    inputs:
      aws-region:
        required: false
        type: string
        default: us-east-1
      repo-name:
        type: string
        required: true
      tag:
        type: string
        required: false
        default: ${{ github.ref }}


permissions:
  id-token: write
  contents: read

env:
  AWS_REGION : ${{ inputs.aws-region }}
  ECR_REPO_ADDRESS: 917902836630.dkr.ecr.us-east-1.amazonaws.com
  ECR_REPO: 917902836630.dkr.ecr.us-east-1.amazonaws.com/report-server


jobs:
  Build_Push:
    name: Docker Build and Push
    runs-on: ubuntu-latest
    outputs:
      image: ${{ steps.image.outputs.IMAGE_NAME }}
      short-image: ${{ steps.image.outputs.SHORT_IMAGE }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          repository: ChildMindInstitute/mindlogger-report-server
          ref: dev

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: arn:aws:iam::917902836630:role/cmiml-devops-oidc-github-role
          role-session-name: gha-oidc-runner-${{ inputs.repo-name }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Login to ECR
        run: |
          aws ecr get-login-password --region ${{ env.AWS_REGION }} | docker login --username AWS --password-stdin ${{ env.ECR_REPO_ADDRESS }}

      - name: Generate image name
        id: image
        run: |
          SHORT_SHA=$(git rev-parse --short HEAD)
          echo "SHORT_IMAGE=${{ inputs.tag }}-build-${SHORT_SHA}" >> $GITHUB_OUTPUT
          echo "IMAGE_NAME=${ECR_REPO}:${{ inputs.tag }}-build-${SHORT_SHA}" >> $GITHUB_OUTPUT

      - name: Build and push
        uses: docker/build-push-action@v5
        with:
          context: .
          file: Dockerfile
          push: true
          tags: |
            ${{ steps.image.outputs.IMAGE_NAME }}
          platforms: linux/amd64,linux/arm64


